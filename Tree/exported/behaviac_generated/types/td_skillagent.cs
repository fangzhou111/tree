// ---------------------------------------------------------------------
// This agent file is auto-generated by behaviac designer, but you should
// implement the methods of the agent class if necessary!
// ---------------------------------------------------------------------

using System.Collections.Generic;

[behaviac.TypeMetaInfo("td_skillagent", "")]
public class td_skillagent : behaviac.Agent
{
	// properties

	[behaviac.MemberMetaInfo("技能_技能_执行完毕", "done")]
	public bool done = false;

    [behaviac.MemberMetaInfo("技能_技能_循环次数", "curloopcount")]
    public int curloopcount = 0;

    [behaviac.MemberMetaInfo("技能_技能_等待帧数", "curwaitframe")]
    public int curwaitframe = 0;

    [behaviac.MemberMetaInfo("技能_技能_目标数量", "targetnum")]
    public int targetnum = 0;

    [behaviac.MethodMetaInfo("技能_选择多个目标（目标类型#人数）", "getskilltargetlst")]
    public behaviac.EBTStatus getskilltargetlst(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_选择扇形范围内目标（大半径#小半径#角度#偏移角度#目标类型#人数#显示警示）", "getskilltargetbycircle")]
    public behaviac.EBTStatus getskilltargetbycircle(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_选择方形范围内目标（长#宽#目标类型#人数#显示警示）", "getskilltargetbysquare")]
    public behaviac.EBTStatus getskilltargetbysquare(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_选择当前目标列表扇形范围内目标（大半径#小半径#角度#偏移角度#目标类型#人数#显示警示）", "getskilltargetbytargetcircle")]
    public behaviac.EBTStatus getskilltargetbytargetcircle(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_选择技能位置扇形范围内目标（大半径#小半径#角度#偏移角度#目标类型#人数#显示警示）", "getskilltargetbyskillposcircle")]
    public behaviac.EBTStatus getskilltargetbyskillposcircle(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_选择随机目标", "findrandomtarget")]
    public behaviac.EBTStatus findrandomtarget(string type)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_装载技能动作", "putactioninfo")]
    public behaviac.EBTStatus putactioninfo(string name)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_为目标添加BUFF", "addbuff")]
    public behaviac.EBTStatus addbuff(string name)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_对目标造成伤害", "adddamagetotarget")]
    public behaviac.EBTStatus adddamagetotarget(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_在技能所在的位置创建特效（名字#时间）", "addeffecttoskillpos")]
    public behaviac.EBTStatus addeffecttoskillpos(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_为目标创建特效（名字#挂点#跟随目标#时间）", "addeffecttotarget")]
    public behaviac.EBTStatus addeffecttotarget(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_执行技能前摇", "gopreskill")]
    public behaviac.EBTStatus gopreskill()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_执行技能后摇", "goafterskill")]
    public behaviac.EBTStatus goafterskill()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_获取自己为目标", "getselftotarget")]
    public behaviac.EBTStatus getselftotarget()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }


    [behaviac.MethodMetaInfo("技能_获取某方按某属性升序排列目标（目标类型#属性#人数）", "getuptargetlstbyattr")]
    public behaviac.EBTStatus getuptargetlstbyattr(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_获取某方按某属性降序排列目标（目标类型#属性#人数）", "getdowntargetlstbyattr")]
    public behaviac.EBTStatus getdowntargetlstbyattr(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_清空当前技能目标", "cleartarget")]
    public behaviac.EBTStatus cleartarget()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_概率（0-1）", "random")]
    public bool random(string x)
    {
        // Write your logic codes here.

        return false;
    }

    [behaviac.MethodMetaInfo("技能_获取当前目标", "getcharactertarget")]
    public behaviac.EBTStatus getcharactertarget()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_创建子弹", "createbullet")]
    public behaviac.EBTStatus createbullet(string name)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_判断是否有技能目标死亡", "istargetplayerdie")]
    public bool istargetplayerdie()
    {
        // Write your logic codes here.

        return false;
    }

    [behaviac.MethodMetaInfo("技能_判断是否所有技能目标死亡", "istargetplayerdie")]
    public bool istargetplayeralldie()
    {
        // Write your logic codes here.

        return false;
    }

    [behaviac.MethodMetaInfo("技能_为自己创建特效（名字#挂点#跟随目标#时间）", "addeffecttoself")]
    public behaviac.EBTStatus addeffecttoself(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_按距离获取目标（是否远到近#目标类型#人数）", "gettargetbydis")]
    public behaviac.EBTStatus gettargetbydis(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_等待", "wait")]
    public behaviac.EBTStatus wait()
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_变大体型", "changemodelscale")]
    public behaviac.EBTStatus changemodelscale(float times)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_创建技能体(技能id#生效间隔时间#技能体存活时间)", "addskillobj")]
    public behaviac.EBTStatus addskillobj(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_获取能量", "addpower")]
    public behaviac.EBTStatus addpower(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_获取某id角色数量（角色baseid#角色类型）", "getcharactercountbybaseid")]
    public int getcharactercountbybaseid(string info)
    {
        // Write your logic codes here.

        return 0;
    }

    [behaviac.MethodMetaInfo("技能_获取某角色id目标（角色baseid#角色类型）", "gettargetbycharacterbaseid")]
    public behaviac.EBTStatus gettargetbycharacterbaseid(string info)
    {
        // Write your logic codes here.

        return behaviac.EBTStatus.BT_INVALID;
    }

    [behaviac.MethodMetaInfo("技能_获取某属性类型角色数量（角色属性类型#角色类型）", "getcharactercountbytype")]
    public int getcharactercountbytype(string info)
    {
        // Write your logic codes here.

        return 0;
    }

    [behaviac.MethodMetaInfo("技能_获取当前能量值", "getpower")]
    public int getpower()
    {
        // Write your logic codes here.

        return 0;
    }

}
